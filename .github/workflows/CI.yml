name: CI
on:
  push:
    branches:
      - main
      - develop
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {version: '1.7',   os: ubuntu-latest,  payload: mpi}
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: x64
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - name: Execute serial tests
        uses: julia-actions/julia-runtest@v1
        if: ${{ matrix.payload == 'serial' }}
        continue-on-error: ${{ matrix.version == 'nightly' }}
      - name: Execute MPI-parallel tests
        run: |
          julia --project -e '
            using Pkg; Pkg.build(); Pkg.precompile()
            Pkg.add("MPI"); using MPI; MPI.install_mpiexecjl()
            Pkg.test()
          '
          $HOME/.julia/bin/mpiexecjl -np 4 julia --check-bounds=yes --depwarn=yes --project --color=yes
        if: ${{ matrix.payload == 'mpi' }}
        continue-on-error: ${{ matrix.version == 'nightly' }}

