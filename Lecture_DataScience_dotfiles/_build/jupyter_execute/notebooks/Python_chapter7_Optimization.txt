def f(x):
    return 5.0 * x**2 - 4.0 * x  + 3.0
def dfdx(x):
    return 10.0 * x -4.0

step = 100
etas = [0.2, 5.e-2, 1.e-2, 1.e-3]
x_and_f = [ [] for i in range(len(etas))]
for i in range(len(etas)): 
    x = 3.0 #初期値
    x_and_f[i] += [ [ x, f(x) ] ] #結果をリストに格納
    for tstep in range(step): # step回だけ更新を繰り返す
        x = x - etas[i] * dfdx(x) # xnew = xold - eta * dfdx(at xold)になっている
        x_and_f[i] += [ [ x, f(x) ] ] #結果をリストに格納

import numpy as np
from matplotlib import pyplot as plt
from matplotlib import animation, rc
rc('animation', html='jshtml')
cols = ["blue","green","orange","purple"]
x = np.linspace(-6, 6, 100);y = f(x)

fig_scatter = plt.figure(figsize=(10,5))
plt.xlim(-4,4);plt.ylim(0,40)
plt.plot(x,y)
plt_scatter = []
for nth in range(len(x_and_f[i])):
    plot_obj = []
    for i, eta in enumerate(etas): 
        if nth == 0 :
            tl = "eta="+str(eta)
        else :
            tl = ""
        plot_obj += [plt.scatter(x_and_f[i][nth][0],x_and_f[i][nth][1], c=cols[i],label=tl,alpha=0.7)]
    plt_scatter.append(plot_obj)
plt.legend()
plt.close()

animation.ArtistAnimation(fig_scatter, plt_scatter, interval=100)


def f(x):
    return x**4 - 3.0* x**3 + 2.0*x -1.0
def fp(x,eps):
    return (f(x+eps)-f(x))/eps
x=5
exact_fp = 277 
for p in [0,-1,-2,-4,-5,-10,-15]:
    eps = 10**p
    print("eps\t",str("%5.1e" % eps), "\tf'("+str(x)+")\t", str("%18.13f" % fp(x,eps) ),
          "\t diff.",str("%5.1e" % np.log10(abs(fp(x,eps)-exact_fp))))


def fp2(x,eps):
    return (f(x+0.5*eps)-f(x-0.5*eps))/(eps)

print("分割する区間の中央をxに揃える方式")
for p in [0,-1,-2,-4,-5,-10,-15]:
    eps = 10**p
    print("eps\t", str("%5.1e" % eps), "\tf'("+str(x)+")\t",str("%18.13f" % fp2(x,eps) ),
          "\t diff.",str("%5.1e" % np.log10(abs(fp2(x,eps)-exact_fp))))

from matplotlib import pyplot as plt
import numpy as np
xr = np.arange(-5.0,3.0,0.01)
yr = 2.0 * xr**2 + 4.0 * xr + 5.0
fig = plt.figure(figsize=(10,2))
plt.plot(xr,yr)
plt.show()

xr = np.arange(-5.0,3.0,0.01)
yr = 2.0 * xr**2 + 4.0 * xr + 5.0
yp = 4.0 * xr + 4.0 
fig = plt.figure(figsize=(20,4))
axs = [fig.add_subplot(121),fig.add_subplot(122)]
axs[0].plot(xr,yr,label="f(x)"); axs[0].legend()
axs[1].plot(xr,yp,label="f'(x)");axs[1].plot([-5,3],[0,0],color="gray",linestyle="dotted");axs[1].legend()
plt.show();plt.close()
